{"version":3,"sources":["../lib/enum.js"],"names":[],"mappings":";;;;;;;;eAAoB,QAAQ,SAAR,C;;IAAb,S,YAAA,S;;gBACsB,QAAQ,UAAR,C;;IAAtB,kB,aAAA,kB;AAEA,IAAM,8BAAW,IAAI,SAAJ,CAAc,MAAd,EAAsB,CAC5C,SAD4C,EAE5C,EAAC,MAAM,OAAP,EAAgB,KAAK,QAArB,EAF4C,CAAtB,EAGrB;AACD,aADC,yBACsB;AAAA,QAAX,KAAW,yDAAH,EAAG;AAAA,wBAGjB,KAHiB,CAEnB,MAFmB;AAAA,QAEnB,MAFmB,iCAEV,EAFU;;AAIrB,WAAO,OAAP,CAAe,UAAC,IAAD,EAAQ;AACrB,UAAM,cAAc,IAAd,yCAAc,IAAd,CAAN;AACA,UAAG,SAAS,QAAT,IAAqB,SAAS,QAAjC,EAA0C;AACxC;AACD;AACD,YAAM,IAAI,kBAAJ,CAAuB,IAAvB,CAAN;AACD,KAND;AAOA,WAAO,KAAP;AACD;AAbA,CAHqB,CAAjB","file":"enum.js","sourcesContent":["const {KoelTyper} = require('./typer');\nconst {UnallowedTypeError} = require('./errors');\n\nexport const KoelEnum = new KoelTyper('enum', [\n  'default',\n  {type: 'array', key: 'allows'}\n], {\n  constructor(props = {}){\n    const {\n      allows = []\n    } = props;\n    allows.forEach((item)=>{\n      const type = typeof(item);\n      if(type === 'string' || type === 'number'){\n        return;\n      }\n      throw new UnallowedTypeError(type);\n    });\n    return props;\n  }\n});\n"]}